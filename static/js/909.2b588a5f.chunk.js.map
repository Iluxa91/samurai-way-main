{"version":3,"file":"static/js/909.2b588a5f.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","webpack://samurai-way/./src/components/Dialogs/ALternativeMessage/AlternativeMessage.module.css?e805","components/Dialogs/ALternativeMessage/AlternativeMessage.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Yt20n\",\"dialogsItems\":\"Dialogs_dialogsItems__ClmGN\",\"active\":\"Dialogs_active__r0fW5\",\"dialog\":\"Dialogs_dialog__Og27p\",\"messages\":\"Dialogs_messages__z3eu-\",\"message\":\"Dialogs_message__wW1H9\",\"dialogF\":\"Dialogs_dialogF__JxNNe\"};","import { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n    src: string\r\n}\r\n\r\nexport const DialogItem: React.FC<PropsType> = ({ id, name, src }) => {\r\n\r\n    const path = \"/dialogs/\" + id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src={src} alt='ava' />\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"AlternativeMessage_items__DiJNP\"};","import React, {ChangeEvent, KeyboardEvent, useState} from \"react\"\r\nimport s from \"./AlternativeMessage.module.css\"\r\nimport {MdSend} from \"react-icons/md\";\r\n\r\ntype PropsType = {\r\n    addMessage: (title: string) => void\r\n    scroll?: any\r\n}\r\n\r\nexport const AlternativeMessage: React.FC<PropsType> = ({ addMessage, scroll }) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n\r\n    const onClickHandler = () => {\r\n        if (title.trim() !== '') {\r\n            addMessage(title)\r\n            setTitle('')\r\n            setTimeout(() => {\r\n                scroll.current.scrollIntoView({ behavior: 'smooth' })\r\n            }, 0)\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            onClickHandler()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.items} >\r\n            <input type='text'\r\n                   placeholder=' New message...'\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n            />\r\n            <button style={{ cursor: 'pointer', marginBottom: '-6px' }}\r\n                    onClick={onClickHandler}\r\n            ><MdSend/></button>\r\n        </div>\r\n    )\r\n}","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { ComponentType } from 'react';\r\nimport {AppReduxStoreType} from \"../../redux/store-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {addMessage, DialogsType, MessageType} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n}\r\n\r\nlet mapStateToProps = (state: AppReduxStoreType): MapStateToPropsType => ({\r\n    dialogs: state.dialogsPage.dialogs,\r\n    message: state.dialogsPage.message,\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, { addMessage }),\r\n)(Dialogs)","import React from \"react\"\r\nimport s from \"./Dialogs.module.css\"\r\nimport {DialogsType, MessageType} from \"../../redux/dialogs-reducer\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {MessageComponent} from \"./Message/MessageComponent\";\r\nimport {\r\n    AlternativeMessage\r\n} from \"./ALternativeMessage/AlternativeMessage\";\r\n\r\ntype PropsType = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n    addMessage: () => void\r\n}\r\n\r\nexport const Dialogs: React.FC<PropsType> = ({addMessage, dialogs, message}) => {\r\n\r\n    const dialogsElements = dialogs.map(d =>\r\n        <DialogItem name={d.name} key={d.id} id={d.id} src={d.src}/>\r\n    )\r\n\r\n    const messageElements = message.map(m =>\r\n        <MessageComponent\r\n            key={m.id}\r\n            id={m.id}\r\n            avatar={m.avatar}\r\n            name={m.name}\r\n            message={m.message}\r\n            time={m.time}\r\n        />\r\n    )\r\n\r\n    const scroll = React.useRef(null)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.dialogF} style={{\r\n                overflow: \"auto\",\r\n                height: \"500px\",\r\n                WebkitOverflowScrolling: \"touch\"\r\n            }}>\r\n                {messageElements}\r\n                <div ref={scroll}/>\r\n            </div>\r\n            <div/>\r\n            <div style={{margin: \"15px\", marginLeft: \"340px\"}}>\r\n                <AlternativeMessage addMessage={addMessage} scroll={scroll}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppReduxStoreType} from \"../redux/store-redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToPropsForRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: AppReduxStoreType):MapStateToPropsForRedirectType => ({\r\n    isAuth:state.auth.isAuth})\r\n\r\nexport function withAuthRedirect <T>(Component:ComponentType<T>) {\r\n    function RedirectComponent(props:MapStateToPropsForRedirectType) {\r\n        let {isAuth,...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent\r\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["DialogItem","id","name","src","path","className","s","alt","to","AlternativeMessage","addMessage","scroll","useState","title","setTitle","onClickHandler","trim","setTimeout","current","scrollIntoView","behavior","type","placeholder","value","onChange","event","currentTarget","onKeyPress","e","charCode","style","cursor","marginBottom","onClick","compose","withAuthRedirect","connect","state","dialogs","dialogsPage","message","dialogsElements","map","d","messageElements","m","MessageComponent","avatar","time","React","overflow","height","WebkitOverflowScrolling","ref","margin","marginLeft","mapStateToPropsForRedirect","isAuth","auth","Component","props","restProps","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}